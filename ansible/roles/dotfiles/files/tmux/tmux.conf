set-option -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# ctrl-a
unbind C-b
set -g prefix C-a

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# colors
set -g status-fg colour15
set -g status-bg colour0
set -g status-justify left

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# crap, why this doesn't work this way by default?
bind c new-window -c "#{pane_current_path}"

setw -g automatic-rename off
setw -g window-status-current-style bg=colour3,fg=colour0

# mimic vim window cycling
unbind ^A
bind ^A select-pane -t :.+

# ctrl-left for word movement
set-window-option -g xterm-keys on

# mouse
set -g mouse on

# not sure what it is
set -sg escape-time 0

# bigger history limit
set-option -g history-limit 100000

set -g window-status-format "#W"
set -g window-status-current-format "#W"

set -g status-right-length 50
set -g status-right '#(~/bin/tmux-bar.sh)'

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

set -g status-interval 1
