# I don't like to integrate Prometheus with Kubernetes directly in my cluster. It's great for EKS, when you have
# many nodes and multiple apps, then you enable auto-discovery and you're done. But I don't want that setup here.
# So I figured out I could just use `curl` to get Prometheus metrics from kubelet+cadvisor. The only problem
# left was how to make it scrape-able. That's where Sinatra comes into play :)
#
# This is very ugly hack. Don't do it.

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: prometheus

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - "nodes/proxy"
  verbs:
  - get

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: prometheus

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: prometheus-kubernetes-scripts
  namespace: prometheus
data:
  main.rb: |-
    require 'sinatra'
    set :bind, '0.0.0.0'

    get '/metrics' do
      `bash ./do.sh`
    end

  do.sh: |-
    #! /bin/bash
    # Taken from k8s docs verbatim
    APISERVER=https://kubernetes.default.svc
    SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
    NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)
    TOKEN=$(cat ${SERVICEACCOUNT}/token)
    CACERT=${SERVICEACCOUNT}/ca.crt
    curl --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X GET ${APISERVER}/api/v1/nodes/vps275760/proxy/metrics/cadvisor

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-kubernetes-web
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus-kubernetes-web
  template:
    metadata:
      labels:
        app: prometheus-kubernetes-web
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus-kubernetes-web
        image: ubuntu:latest
        args:
        - bash  
        - -c
        - 'apt-get update; apt-get -y install curl ruby ruby-sinatra; cd /scripts; ruby main.rb'
        ports:
        - containerPort: 4567
        volumeMounts:
        - name: scripts
          mountPath: /scripts
      volumes:
      - name: scripts
        configMap:
          name: prometheus-kubernetes-scripts

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus-kubernetes-web
  namespace: prometheus
spec:
  selector:
    app: prometheus-kubernetes-web
  ports:
  - port: 4567
    targetPort: 4567
