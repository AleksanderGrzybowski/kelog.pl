---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laptop-metrics-grafana
spec:
  selector:
    matchLabels:
      app: laptop-metrics-grafana
  replicas: 1
  template:
    metadata:
      labels:
        app: laptop-metrics-grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        resources:
          limits:
            memory: "300Mi"
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          failureThreshold: 30
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: laptop-metrics-grafana-admin-password
              key: password
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-data
        - mountPath: /etc/grafana/provisioning/datasources/
          name: grafana-datasource
        - mountPath: /etc/grafana/provisioning/dashboards/
          name: grafana-dashboard-provider
        - mountPath: /var/lib/grafana/dashboards/
          name: grafana-initial-dashboard
      volumes:
      - name: grafana-data
        hostPath:
          path: /var/kelog.pl/k8s-laptop-metrics-grafana
          type: Directory
      - name: grafana-datasource
        configMap:
          name: laptop-metrics-grafana-datasource
          items:
          - key: influxdb.yml
            path: influxdb.yml
      - name: grafana-dashboard-provider
        configMap:
          name: laptop-metrics-grafana-dashboard-provider
          items:
          - key: provider.yml
            path: provider.yml
      - name: grafana-initial-dashboard
        configMap:
          name: laptop-metrics-grafana-initial-dashboard
          items:
          - key: initial.json
            path: initial.json
---
apiVersion: v1
kind: Service
metadata:
  name: laptop-metrics-grafana
spec:
  ports:
  - port: 3000
    protocol: TCP
  selector:
    app: laptop-metrics-grafana
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: laptop-metrics-grafana
spec:
  rules:
  - host: laptop-metrics.test
    http:
      paths:
      - path: /
        backend:
          serviceName: laptop-metrics-grafana
          servicePort: 3000

