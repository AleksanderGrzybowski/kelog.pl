apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: temperature-mariadb-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temperature-mariadb
spec:
  selector:
    matchLabels:
      app: temperature-mariadb
  replicas: 1
  template:
    metadata:
      labels:
        app: temperature-mariadb
    spec:
      containers:
      - name: temperature-mariadb
        image: mariadb:latest
        resources:
          limits:
            memory: "300Mi"
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mariadb-volume
        livenessProbe:
          exec:
            command:
            - 'mysqladmin'
            - 'ping'
            - '-uroot'
            - '-proot'
          failureThreshold: 30
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: root
          - name: MYSQL_DATABASE
            value: temperature
      volumes:
      - name: mariadb-volume
        persistentVolumeClaim:
          claimName: temperature-mariadb-data
      nodeSelector:
        ismasterhost: 'yes'
---
apiVersion: v1
kind: Service
metadata:
  name: mysql # it's hardcoded in grafana image
spec:
  selector:
    app: temperature-mariadb
  ports:
  - port: 3306

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-outside
spec:
  selector:
    app: temperature-mariadb
  type: NodePort
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 31306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temperature-grafana
spec:
  selector:
    matchLabels:
      app: temperature-grafana
  replicas: 1
  template:
    metadata:
      labels:
        app: temperature-grafana
    spec:
      containers:
      - name: temperature-grafana
        image: kelog/temperature:grafana
        imagePullPolicy: Always
        resources:
          limits:
            memory: "50Mi"
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          failureThreshold: 30
        env:
          - name: GF_DASHBOARDS_JSON_ENABLED
            value: 'true'
          - name: GF_DASHBOARDS_JSON_PATH
            value: '/dashboards'
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: 'true'
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: temperature-grafana-admin-password
                key: password
---
apiVersion: v1
kind: Service
metadata:
  name: temperature-grafana
spec:
  selector:
    app: temperature-grafana
  ports:
  - port: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: temperature
spec:
  rules:
  - host: temperature.kelog.pl
    http:
      paths:
      - path: /
        backend:
          serviceName: temperature-grafana
          servicePort: 3000

